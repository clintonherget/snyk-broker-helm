# Default values for snyk-broker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Snyk Specific Values
brokerToken: ""
brokerClientUrl: ""

# SCM Generic
scmType: "github-com"
scmToken: ""

# Github Enterprise
github: ""
githubApi: ""
githubGraphQl: ""

# Bitbucket Server 
bitbucketUsername: ""
bitbucketPassword: ""
bitbucket: ""
bitbucketApi: ""

# GitLab
gitlab: ""

# Azure Repos
azureReposOrg: ""
azureReposHost: ""

# Artifactory
artifactoryUrl: ""

# Jira
jiraUsername: ""
jiraPassword: ""
jiraHostname: ""

# Container Registry Broker
crCredentials: ""
crImage: "latest"

# Logging
logLevel: "info"
logEnableBody: "false"

# Advanced
httpsCert: ""
httpsKey: ""
caCert: ""
accept: ""
# Change tlsRejectUnauthorized to 0 to troubleshoot SSL issues
tlsRejectUnauthorized: 1

image:
  repository: snyk/broker
  crRepository: snyk/container-registry-agent
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

#Container port for Snyk Broker
deployment:
   container: 
     containerPort: 8080
     crSnykPort: 8081
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "snyk-broker"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  #Snyk Broker
  type: LoadBalancer
  port: 8000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


